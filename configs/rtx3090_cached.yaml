# RTX 3090 config with cached edge detection for fast training
model:
  unet:
    sample_size: 512  # Full resolution
    in_channels: 4
    out_channels: 4
    layers_per_block: 2
    block_out_channels: [320, 640, 1280, 1280]  # Standard SD 1.5 
    down_block_types:
      - "CrossAttnDownBlock2D"
      - "CrossAttnDownBlock2D" 
      - "CrossAttnDownBlock2D"
      - "DownBlock2D"
    up_block_types:
      - "UpBlock2D"
      - "CrossAttnUpBlock2D"
      - "CrossAttnUpBlock2D"
      - "CrossAttnUpBlock2D"
    cross_attention_dim: 768
    attention_head_dim: 8
    use_linear_projection: true

diffusion:
  num_train_timesteps: 1000
  beta_schedule: "scaled_linear"
  prediction_type: "epsilon"
  clip_sample: false

training:
  learning_rate: 1e-4
  weight_decay: 0.01
  epsilon: 1e-8
  optimizer: "adamw"
  max_train_steps: 5000  # Reasonable training length
  batch_size: 1
  gradient_accumulation_steps: 8  # Reduced for faster feedback
  mixed_precision: "fp16"
  gradient_clipping: 1.0
  use_ema: false  # Disabled to save memory
  ema_decay: 0.9999

data:
  dataset_name: "coco"
  dataset_type: "cached_coco"  # Use cached dataset
  image_size: 512
  limit_dataset_size: 1000  # Start with subset for testing
  download_coco: true
  batch_size: 1
  
  # Edge detection settings (for cache)
  edge_method: "canny"
  canny_low: 50
  canny_high: 150
  edge_jitter: true
  jitter_prob: 0.5

logging:
  log_interval: 10
  save_interval: 1000  # Save every 1000 steps to reduce disk usage
  project_name: "scribble-diffusion-cached"
  run_name: "rtx3090-cached-edges"

validation:
  validation_steps: 250
  num_validation_images: 4
  guidance_scale: 7.5
  num_inference_steps: 20